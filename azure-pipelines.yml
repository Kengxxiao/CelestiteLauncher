# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

name: $(MajorVersion).$(MinorVersion).$(Date:yy)$(DayOfYear)$(rev:.r)
jobs:
  - job: BuildWindowsVersion
    pool:
      vmImage: windows-2022
    steps:
      - task: UseDotNet@2
        inputs:
          packageType: sdk
          version: 8.0.x
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            dotnet workload update
            Set-Content $(Build.SourcesDirectory)/Celestite/Build.cs 'namespace Celestite; public class Build { public const string BuildId = "Beta $(Build.BuildNumber)"; }'
            Set-Content $(Build.SourcesDirectory)/Celestite/Network/CelestiteBypassCore/HttpHelperImplementation.cs '$(CELESTITE_BYPASS_CODE)'
      - task: Assembly-Info-NetCore@3
        inputs:
          Path: '$(Build.SourcesDirectory)'
          FileNames: 'Celestite.Desktop/Celestite.Desktop.csproj'
          InsertAttributes: true
          FileEncoding: 'utf-8'
          WriteBOM: true
          GenerateDocumentationFile: 'false'
          GeneratePackageOnBuild: 'false'
          PackageRequireLicenseAcceptance: 'false'
          Authors: 'Kengxxiao'
          Company: 'Kengxxiao'
          Product: 'Celestite Launcher'
          Description: 'Celestite Launcher'
          Copyright: 'Copyright Â© 2024 Kengxxiao'
          VersionNumber: '$(Build.BuildNumber)'
          FileVersionNumber: '$(Build.BuildNumber)'
          InformationalVersion: '$(Build.BuildNumber)'
          LogLevel: 'verbose'
          FailOnWarning: false
          DisableTelemetry: false
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '$(Build.SourcesDirectory)/Celestite.Desktop/Celestite.Desktop.csproj'
          arguments: '/p:StripSymbols=true /p:Configuration=Release /p:SelfContained=true /p:PublishTrimmed=true /p:PublishAot=true /p:RuntimeIdentifier=win-x64 /p:DebugType=None /p:DebugSymbols=false --output $(Build.ArtifactStagingDirectory)/Celestite_Windows_$(Build.BuildNumber)'
          modifyOutputPath: false
      - publish: '$(Build.ArtifactStagingDirectory)/Celestite_Windows_$(Build.BuildNumber)'
        displayName: 'Publish Windows version'
        artifact: 'windows'
  - job: BuildLinuxVersion
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UseDotNet@2
        inputs:
          packageType: sdk
          version: 8.0.x
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            dotnet workload update
            sudo apt-get install clang zlib1g-dev
            Set-Content $(Build.SourcesDirectory)/Celestite/Build.cs 'namespace Celestite; public class Build { public const string BuildId = "Beta $(Build.BuildNumber)"; }'
            Set-Content $(Build.SourcesDirectory)/Celestite/Network/CelestiteBypassCore/HttpHelperImplementation.cs '$(CELESTITE_BYPASS_CODE)'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '$(Build.SourcesDirectory)/Celestite.Desktop/Celestite.Desktop.csproj'
          arguments: '/p:StripSymbols=true /p:Configuration=Release /p:SelfContained=true /p:PublishTrimmed=true /p:PublishAot=true /p:RuntimeIdentifier=linux-x64 /p:DebugType=None /p:DebugSymbols=false --output $(Build.ArtifactStagingDirectory)/Celestite_Linux_$(Build.BuildNumber)'
          modifyOutputPath: false
      - publish: '$(Build.ArtifactStagingDirectory)/Celestite_Linux_$(Build.BuildNumber)'
        displayName: 'Publish Linux version'
        artifact: 'linux'
  - job: GithubRelease
    dependsOn:
      - BuildWindowsVersion
      - BuildLinuxVersion
    steps:
      - download: current
        artifact: windows
      - download: current
        artifact: linux
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'github.com_Kengxxiao'
          repositoryName: 'Kengxxiao/CelestiteLauncher'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'userSpecifiedTag'
          tag: '$(Build.BuildNumber)'
          title: '$(Build.BuildNumber)'
          changeLogCompareToRelease: 'lastFullRelease'
          changeLogType: 'commitBased'
          assets: |
            $(Pipeline.Workspace)/linux/*.zip
            $(Pipeline.Workspace)/windows/*.zip
