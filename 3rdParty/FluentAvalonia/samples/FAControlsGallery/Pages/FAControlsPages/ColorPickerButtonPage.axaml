<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:ctrls="using:FAControlsGallery.Controls"
             xmlns:uiconv="using:FluentAvalonia.Converters"
             mc:Ignorable="d" d:DesignWidth="1100" d:DesignHeight="720"
             x:Class="FAControlsGallery.Pages.ColorPickerButtonPage">
    <UserControl.Resources>
        <uiconv:ColorToBrushConv x:Key="ColorToBrushConv" />
    </UserControl.Resources>

    <StackPanel Spacing="8">
        <ctrls:ControlExample Header="ColorPickerButton">

            <StackPanel Spacing="30" Orientation="Horizontal">
                <ui:ColorPickerButton Name="PickerButton" Color="Lime"  />

                <ui:ColorPickerButton Name="PickerButton2" Color="DarkSlateBlue" ShowAcceptDismissButtons="False" />
            </StackPanel>
            <ctrls:ControlExample.Options>
                <StackPanel Spacing="3">
                    <TextBlock Text="Change color" />
                    <Border Background="{Binding #PickerButton.Color, Converter={StaticResource ColorToBrushConv}}"
                            Width="50" Height="30" />
                    <Border Background="{Binding #PickerButton2.Color, Converter={StaticResource ColorToBrushConv}}"
                            Width="50" Height="30" />
                </StackPanel>
            </ctrls:ControlExample.Options>

            <ctrls:ControlExample.XamlSource>
                <x:String>
                    &lt;ui:ColorPickerButton Name="PickerButton" Color="Lime"  /&gt;

                    &lt;ui:ColorPickerButton Name="PickerButton2" Color="DarkSlateBlue" ShowAcceptDismissButtons="False" /&gt;
                </x:String>
            </ctrls:ControlExample.XamlSource>

            <ctrls:ControlExample.UsageNotes>
                <x:String xml:space="preserve">
Even my compacted ColorPicker implementation may not be suitable in all UX circumstances. ColorPickerButton offers an alternative to hide the ColorPicker away in a flyout. Because ColorPicker is not the lightest of controls, all ColorPickerButtons share one instance of a Flyout containing a color picker. Because Flyouts are light dismissable this shouldn't cause any problems. Most properties on ColorPicker are present on ColorPickerButton and despite sharing, each ColorPickerButton can be configured differently (all properties are reset upon opening each button)
By default, the ColorPickerButton will not update the color until it's confirmed, but you can set the flyout to update the color in realtime by setting ShowAcceptDismissButtons=False.
                </x:String>
            </ctrls:ControlExample.UsageNotes>
        </ctrls:ControlExample>
    </StackPanel>
</UserControl>
